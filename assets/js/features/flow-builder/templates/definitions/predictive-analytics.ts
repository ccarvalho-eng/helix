import { Template } from '../types';

export const predictiveAnalyticsTemplate: Template = {
  id: 'predictive-analytics',
  name: 'Predictive Analytics Pipeline',
  description: 'Build and deploy machine learning models for business predictions',
  category: 'data-analysis',
  nodes: [
    {
      id: 'data-sources',
      type: 'input',
      label: 'Data Sources',
      description: 'Historical data from databases, APIs, and files',
      x: 100,
      y: 250,
    },
    {
      id: 'data-api',
      type: 'api',
      label: 'Data API Gateway',
      description: 'API endpoints for data collection from various sources',
      x: 300,
      y: 150,
      config: {
        endpoint: '/api/data/collect',
        method: 'GET',
        authentication: 'api_key',
      },
    },
    {
      id: 'data-collector',
      type: 'skill',
      label: 'Data Collection',
      description: 'Collect and aggregate data from multiple sources',
      x: 300,
      y: 250,
      config: {
        skill_type: 'data_extraction',
        parameters: 'database_queries, api_calls, file_parsing',
      },
    },
    {
      id: 'data-transformer',
      type: 'transform',
      label: 'Data Transformer',
      description: 'Transform and normalize raw data into ML-ready format',
      x: 300,
      y: 350,
      config: {
        transformations: 'normalization, feature_scaling, encoding, aggregation',
        output_format: 'pandas_dataframe',
      },
    },
    {
      id: 'data-cleaner',
      type: 'skill',
      label: 'Data Cleaning',
      description: 'Clean and preprocess data for model training',
      x: 500,
      y: 300,
      config: {
        skill_type: 'data_preprocessing',
        parameters: 'missing_values, outliers, normalization, encoding',
      },
    },
    {
      id: 'model-memory',
      type: 'memory',
      label: 'Model Memory Store',
      description: 'Store trained models and performance metrics',
      x: 500,
      y: 150,
      config: {
        storage_type: 'model_registry',
        retention_policy: '30_days',
        versioning: 'enabled',
      },
    },
    {
      id: 'data-scientist',
      type: 'agent',
      label: 'Data Scientist AI',
      description: 'Analyze data patterns and select appropriate algorithms',
      x: 700,
      y: 200,
      config: {
        model: 'gpt-4',
        temperature: 0.3,
        max_tokens: 900,
        system_prompt:
          'Analyze data characteristics and recommend optimal machine learning approaches.',
      },
    },
    {
      id: 'feature-engineer',
      type: 'skill',
      label: 'Feature Engineering',
      description: 'Create and select relevant features for the model',
      x: 500,
      y: 350,
      config: {
        skill_type: 'feature_engineering',
        parameters: 'feature_creation, selection, scaling, dimensionality_reduction',
      },
    },
    {
      id: 'model-trainer',
      type: 'skill',
      label: 'Model Training',
      description: 'Train multiple ML models and compare performance',
      x: 700,
      y: 200,
      config: {
        skill_type: 'ml_training',
        parameters: 'algorithms: random_forest, xgboost, neural_networks, svm',
      },
    },
    {
      id: 'model-validator',
      type: 'skill',
      label: 'Model Validation',
      description: 'Validate model performance using cross-validation',
      x: 700,
      y: 300,
      config: {
        skill_type: 'model_validation',
        parameters: 'cross_validation, metrics, holdout_testing',
      },
    },
    {
      id: 'hyperparameter-tuner',
      type: 'skill',
      label: 'Hyperparameter Tuning',
      description: 'Optimize model hyperparameters for best performance',
      x: 1100,
      y: 150,
      config: {
        skill_type: 'hyperparameter_optimization',
        parameters: 'grid_search, random_search, bayesian_optimization',
      },
    },
    {
      id: 'optimization-loop',
      type: 'loop',
      label: 'Model Optimization Loop',
      description: 'Iteratively optimize model until convergence',
      x: 900,
      y: 150,
      config: {
        loop_type: 'while',
        condition: 'performance_improvement > threshold',
        max_iterations: 100,
      },
    },
    {
      id: 'model-selector',
      type: 'decision',
      label: 'Best Model?',
      description: 'Select the best performing model based on metrics',
      x: 900,
      y: 275,
      config: {
        condition_type: 'rule_based',
        condition: 'accuracy > 0.85 AND validation_score > 0.8',
      },
    },
    {
      id: 'model-explainer',
      type: 'agent',
      label: 'Model Explainer',
      description: 'Generate explanations for model predictions',
      x: 1100,
      y: 200,
      config: {
        model: 'claude-3',
        temperature: 0.2,
        max_tokens: 700,
        system_prompt: 'Explain model predictions and feature importance in business terms.',
      },
    },
    {
      id: 'prediction-engine',
      type: 'skill',
      label: 'Prediction Engine',
      description: 'Generate predictions on new data',
      x: 1100,
      y: 300,
      config: {
        skill_type: 'prediction',
        parameters: 'batch_prediction, real_time_inference, confidence_intervals',
      },
    },
    {
      id: 'model-monitor',
      type: 'skill',
      label: 'Model Monitoring',
      description: 'Monitor model performance and data drift',
      x: 1100,
      y: 400,
      config: {
        skill_type: 'model_monitoring',
        parameters: 'performance_tracking, drift_detection, alerts',
      },
    },
    {
      id: 'predictive-insights',
      type: 'output',
      label: 'Predictive Insights',
      description: 'Actionable predictions with explanations and confidence scores',
      x: 1300,
      y: 300,
    },
  ],
  connections: [
    {
      source: 'data-sources',
      target: 'data-api',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'data-api',
      target: 'data-collector',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'data-collector',
      target: 'data-transformer',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'data-transformer',
      target: 'data-cleaner',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'data-cleaner',
      target: 'model-memory',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-memory',
      target: 'data-scientist',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'data-cleaner',
      target: 'feature-engineer',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'data-scientist',
      target: 'model-trainer',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'feature-engineer',
      target: 'model-trainer',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-trainer',
      target: 'model-validator',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-trainer',
      target: 'optimization-loop',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'optimization-loop',
      target: 'hyperparameter-tuner',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-validator',
      target: 'model-selector',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'hyperparameter-tuner',
      target: 'model-selector',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-selector',
      target: 'model-explainer',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-selector',
      target: 'prediction-engine',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-selector',
      target: 'model-monitor',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-explainer',
      target: 'predictive-insights',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'prediction-engine',
      target: 'predictive-insights',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
    {
      source: 'model-monitor',
      target: 'predictive-insights',
      sourceHandle: 'right',
      targetHandle: 'left',
    },
  ],
};
